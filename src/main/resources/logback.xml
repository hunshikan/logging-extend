<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" debug="false">
    <turboFilter class="com.jiyuanwai.logging.extend.dynamic.DynamicLoggingFilter"/>

    <!-- 定义日志文件的存储地 -->
    <property name="LOG_PATH" value="./target/log"/>


    <property name="CONSOLE_LOG_PATTERN"
              value="%d{HH:mm:ss.SSS} %-5level [%10.10thread] %-30.30logger{29}\(%4L\\) - %msg%n"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 文件日志格式(打印日志，不打印行号) %X{requestId}就是取MDC -->
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] %-40.40logger{39} --- requestId=%X{requestId}, sessionId=%X{sessionId} : %m%n"/>

    <appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/log.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按日滚动 -->
            <fileNamePattern>${LOG_PATH}/%d{yyyy-MM}/log-%d{yyyy-MM-dd-HH}-%i.log.gz</fileNamePattern>
            <!-- 单个文件最大50M -->
            <maxFileSize>50MB</maxFileSize>
            <!--  最多占用5G磁盘空间，500个文件（总共不能超过该5G） -->
            <maxHistory>500</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 0，禁止丢弃日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 异步队列长度  -->
        <queueSize>4096</queueSize>
        <appender-ref ref="FILE_ALL"/>
    </appender>

    <appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <key>X-StandAlone-File</key>
            <defaultValue>all</defaultValue>
        </discriminator>
        <sift>
            <!-- Appender Name需要独立 -->
            <appender name="FILE-${X-StandAlone-File}" class="ch.qos.logback.core.FileAppender">
                <!-- 正在记录的日志文件的路径及文件名 -->
                <!-- 输出位置，${X-StandAlone-File}取MDC -->
                <file>${LOG_PATH}/${X-StandAlone-File}.log</file>
                <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <!-- 按日滚动 -->
                    <fileNamePattern>${LOG_PATH}/%d{yyyy-MM}/log-%d{yyyy-MM-dd-HH}-%i.${X-StandAlone-File}.gz</fileNamePattern>
                    <!-- 单个文件最大50M -->
                    <maxFileSize>50MB</maxFileSize>
                    <!--  最多占用5G磁盘空间，500个文件（总共不能超过该5G） -->
                    <maxHistory>500</maxHistory>
                    <totalSizeCap>5GB</totalSizeCap>
                </rollingPolicy>
                <!-- 追加方式记录日志 -->
                <append>true</append>
                <!-- 日志文件的格式 -->
                <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                    <charset>utf-8</charset>
                </encoder>
            </appender>
        </sift>
    </appender>

    <!-- 日志输出级别 STDOUT:控制台；SIFT:文件 -->
    <root level="error">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="SIFT"/>
    </root>

</configuration>